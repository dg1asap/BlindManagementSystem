#ifndef INC_LDR_H_
#define INC_LDR_H_

#define NUMBER_OF_LDR_MEASURE 5

#include <stdbool.h>

#include "main.h"
#include "adc.h"

typedef struct LDR ldr;

struct LDR_ {
	uint16_t messureFromLdr[NUMBER_OF_LDR_MEASURE];
	uint16_t averageMeasureFromLdr;
	uint8_t ldrMeasureNumber;

	uint16_t minLDRreading;
	uint16_t maxLDRreading;
	uint16_t upperLDRControlLimit;
	uint16_t lowerLDRControlLimit;
};

uint16_t getLightIntensity(LDR ldr);
void measure(LDR ldr);
bool measureIsAutoOfRange(LDR ldr);
bool areNewMeassures(LDR ldr);
uint16_t getAverageMeassure(LDR ldr);
uint16_t convertPercentToValue(LDR ldr, uint16_t percent);
uint16_t convertLDRvalueToPercent(LDR ldr, uint16_t ldrValue);
bool isAboveUpperLimit(LDR ldr);
bool isBelowLowerLimit(LDR ldr);
void setMinReading(LDR ldr, uint16_t minLDRreading_);
void setMaxReading(LDR ldr, uint16_t maxLDRreading_);
void setUpperControlLimit(LDR ldr, uint16_t upperLDRContolLimit_);
void setLowerControlLimit(LDR ldr, uint16_t lowerLDRControlLimit_);
uint16_t getMinReading(LDR ldr);
uint16_t getMaxReading(LDR ldr);
uint16_t getUpperControlLimit(LDR ldr);
uint16_t getLowerControlLimit(LDR ldr);


#endif /* INC_LDR_H_ */
